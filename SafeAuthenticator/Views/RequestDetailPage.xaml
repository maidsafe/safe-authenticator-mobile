<?xml version="1.0" encoding="utf-8"?>

<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 x:Class="SafeAuthenticator.Views.RequestDetailPage"
                 xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                 xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
                 xmlns:behaviour="clr-namespace:SafeAuthenticator.Controls.Behaviour"
                 xmlns:controls="clr-namespace:SafeAuthenticator.Controls"
                 xmlns:converters="clr-namespace:SafeAuthenticator.Controls.Converters;assembly=SafeAuthenticator"
                 CloseWhenBackgroundIsClicked="False">

    <pages:PopupPage.Animation>
        <animations:ScaleAnimation
            PositionIn="Center"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.8"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True" />
    </pages:PopupPage.Animation>

    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanConverter x:Key="InverseBoolean" />
            <Color x:Key="RedLightColor">#ffebeb</Color>
            <Style x:Key="H1Style" TargetType="Label">
                <Setter Property="FontSize" Value="{StaticResource LargeSize}" />
                <Setter Property="FontAttributes" Value="Bold" />
            </Style>
            <Style x:Key="H2Style" TargetType="Label">
                <Setter Property="FontSize" Value="{StaticResource MediumSize}" />
            </Style>
            <Style x:Key="H3Style" TargetType="Label">
                <Setter Property="FontSize" Value="{StaticResource SmallSize}" />
            </Style>
            <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="WidthRequest" Value="85" />
            </Style>
        </ResourceDictionary>
    </pages:PopupPage.Resources>

    <StackLayout VerticalOptions="Center"
                 Padding="20,0"
                 HorizontalOptions="FillAndExpand">

        <Frame Padding="0"
               BackgroundColor="{StaticResource WhiteColor}">

            <StackLayout x:Name="PopupLayout" 
                         Spacing="10"
                         Padding="16"
                         HeightRequest="{Binding PopupLayoutHeight}">

                <Grid HorizontalOptions="FillAndExpand">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="35"/>
                    </Grid.ColumnDefinitions>

                    <Label HorizontalOptions="CenterAndExpand"
                           HorizontalTextAlignment="Center"
                           Grid.Column="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AppName}"
                                      Style="{StaticResource H1Style}" />
                                <Span Text="{Binding SecondaryTitle}"
                                      Style="{StaticResource H3Style}" />
                            </FormattedString>
                        </Label.FormattedText>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding IsUnregisteredRequest}"
                                         Value="true">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <ImageButton Grid.Column="2"
                                 Style="{StaticResource InfoButton}"
                                 x:Name="InfoIcon"
                                 HorizontalOptions="EndAndExpand"
                                 VerticalOptions="Start"
                                 IsVisible="{Binding IsUnregisteredRequest, Converter={StaticResource InverseBoolean}}"/>
                </Grid>

                <StackLayout x:Name="AppDetailsStackLayout"
                             VerticalOptions="Start" 
                             IsVisible="False" 
                             Margin="10,0">
                    <Label Style="{StaticResource H2Style}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Vendor&#10;"
                                      TextColor="{StaticResource GreySmokeMediumColor}" 
                                      Style="{StaticResource H3Style}" />
                                <Span Text="{Binding AppVendor}" />
                                <Span Text="&#10;&#10;App ID&#10;"
                                      TextColor="{StaticResource GreySmokeMediumColor}"
                                      Style="{StaticResource H3Style}" />
                                <Span Text="{Binding AppId}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>

                <StackLayout IsVisible="False"
                             VerticalOptions="CenterAndExpand">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout"
                                         Binding="{Binding PopupState}"
                                         Value="None">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </StackLayout.Triggers>
                    
                        <Label HorizontalTextAlignment="Center"
                               IsVisible="{Binding IsUnregisteredRequest}"
                               FontSize="{StaticResource LargeSize}"
                               Text="An application is requesting access to read public content on the network" />

                    <StackLayout x:Name="NoContainerTextLabel"
                             IsVisible="False">
                        <Label
                            HorizontalTextAlignment="Center"
                            Style="{StaticResource H2Style}"
                            Text="No permissions requested"
                            TextColor="{StaticResource GreySmokeMediumColor}"
                            FontAttributes="Bold">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label"
                                         Binding="{Binding IsContainerRequest}"
                                         Value="true">
                                    <Setter Property="Text" Value="No container permissions requested" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Frame HasShadow="False"
                       CornerRadius="4"
                       Padding="10"
                       BackgroundColor="{StaticResource GreySnowMediumColor}">

                            <Label HorizontalTextAlignment="Center"
                               Style="{StaticResource H3Style}"
                               Text="The application will be able to to read data on the network"/>
                        </Frame>
                        <StackLayout.Triggers>
                            <MultiTrigger TargetType="StackLayout">
                                <MultiTrigger.Conditions>
                                    <BindingCondition
                                    Binding="{Binding Containers.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                    Value="true" />
                                    <BindingCondition
                                    Binding="{Binding MData.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                    Value="true" />
                                    <BindingCondition
                                    Binding="{Binding IsUnregisteredRequest}"
                                    Value="false" />
                                    <BindingCondition
                                    Binding="{Binding IsMDataRequest}"
                                    Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsVisible" Value="True"/>
                            </MultiTrigger>
                        </StackLayout.Triggers>
                    </StackLayout>

                    <ListView x:Name="ContainerPermissionListView"
                          HasUnevenRows="True"
                          SeparatorVisibility="None"
                          ItemsSource="{Binding Containers}"
                          IsVisible="False">

                        <ListView.Behaviors>
                            <behaviour:ListViewNoSelectionBehavior />
                        </ListView.Behaviors>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:ContainerPermissionViewCell />
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Triggers>
                            <MultiTrigger TargetType="ListView">
                                <MultiTrigger.Conditions>
                                    <BindingCondition
                                Binding="{Binding Containers.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsVisible" Value="True" />
                            </MultiTrigger>
                        </ListView.Triggers>
                    </ListView>

                    <ListView x:Name="MDataPermissionListView"
                          HasUnevenRows="True"
                          SeparatorVisibility="None"
                          ItemsSource="{Binding MData}"
                          IsVisible="False">

                        <ListView.Behaviors>
                            <behaviour:ListViewNoSelectionBehavior />
                        </ListView.Behaviors>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:MDataPermissionViewCell />
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Triggers>
                            <MultiTrigger TargetType="ListView">
                                <MultiTrigger.Conditions>
                                    <BindingCondition
                                Binding="{Binding MData.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsVisible" Value="True" />
                            </MultiTrigger>
                        </ListView.Triggers>
                    </ListView>
                </StackLayout>

                <StackLayout Orientation="Horizontal"
                             IsVisible="False"
                             HorizontalOptions="CenterAndExpand"
                             VerticalOptions="CenterAndExpand">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout"
                                         Binding="{Binding PopupState}"
                                         Value="Loading">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </StackLayout.Triggers>

                    <ActivityIndicator IsRunning="True"/>
                    
                    <Label Text="Authenticating Application..."
                           FontSize="{StaticResource LargeSize}"
                           VerticalTextAlignment="Center"/>
                </StackLayout>

                <Frame HasShadow="False"
                       CornerRadius="4"
                       Padding="10"
                       BackgroundColor="{StaticResource RedLightColor}"
                       IsVisible="False"                        
                       VerticalOptions="CenterAndExpand">
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding PopupState}"
                                     Value="Error">
                            <Setter Property="IsVisible" 
                                    Value="True" />
                        </DataTrigger>
                    </Frame.Triggers>
                    <Label Text="{Binding ErrorMessage}"
                           TextColor="{StaticResource RedColor}"
                           FontSize="{StaticResource LargeSize}"
                           HorizontalTextAlignment="Center" />
                </Frame>

                <StackLayout Orientation="Horizontal"
                             VerticalOptions="End"
                             IsVisible="False">
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout"
                                         Binding="{Binding PopupState}"
                                         Value="None">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </StackLayout.Triggers>

                    <Button x:Name="DenyButton"
                            Text="DENY"
                            HorizontalOptions="EndAndExpand"
                            TextColor="{StaticResource PrimaryColor}"
                            Command="{Binding SendResponseCommand}" 
                            CommandParameter="{Binding Source={x:Reference DenyButton}, Path=Text}"
                            Style="{StaticResource ButtonStyle}"
                            BackgroundColor="Transparent" />

                    <Button x:Name="AllowButton"
                            Text="ALLOW"
                            HorizontalOptions="End"
                            BackgroundColor="{StaticResource PrimaryColor}"
                            Command="{Binding SendResponseCommand}"
                            CommandParameter="{Binding Source={x:Reference AllowButton}, Path=Text}"
                            Style="{StaticResource ButtonStyle}" />
                </StackLayout>

                <Button x:Name="OkButton"
                        Text="OK"
                        VerticalOptions="End"
                        HorizontalOptions="End"
                        TextColor="{StaticResource PrimaryColor}"
                        Command="{Binding SendResponseCommand}" 
                        CommandParameter="{Binding Source={x:Reference OkButton}, Path=Text}"
                        Style="{StaticResource ButtonStyle}"
                        BackgroundColor="Transparent" 
                        WidthRequest="50"
                        IsVisible="False">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                         Binding="{Binding PopupState}"
                                         Value="Error">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

            </StackLayout>
        </Frame>
    </StackLayout>
</pages:PopupPage>
